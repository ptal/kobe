type time_unit = [
    NSec
  | MSec
  | Sec
]

type csv_field = [
    ProblemPath
  | ProblemName
  | Time of time_unit
  | Solutions
  | Fails
  | Nodes
  | Optimum
]

type csv_desc = {
  fields: csv_field list
}

type mzn_strategy = {
  mzn_annot: string;
  short: string;
}

type mzn_kind = {
  solvers: string list;
  models: string list;
  strategies: mzn_strategy list;
}

type decomposed_mzn_kind = {
  solvers: string list;
  strategies: mzn_strategy list;
}

type domain = {
  name: string;
  strategies: string list;
}

type absolute_kind = {
  domains: domain list
}

type solver_kind = [
  | AbSolute of absolute_kind
  | MiniZinc of mzn_kind
  | DecomposedMzn of decomposed_mzn_kind
]

type problem_set = {
  path: string;
  timeout: int;
}

type solver_config = {
  name: string;
  version: string;
  exec: string;
  globals: string;
}

type solvers_config = solver_config list

type benchmark = {
  bench_exec: string;
  input_dir: string;
  output_dir: string;
  problem_sets: problem_set list;
  solvers_kind: solver_kind list;
  csv: csv_desc;
  solvers_config: solvers_config;
}
